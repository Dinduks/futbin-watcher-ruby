#!/usr/bin/env ruby
#encoding: UTF-8

require_relative 'players_list'
require_relative 'futbin_watcher'

def commas(number)
  chunks = []
  number.reverse!
  while number.length > 0
    chunks << number.slice!(0,3)
  end
  chunks.join(',').reverse.gsub(/,/, ' ').gsub(/- /, ' -')
end

def colorize_price(str)
  if str.include? '-' then str.red else str.green end
end

class PriceFormatter
  def format(value)
    if value.to_s.empty? then '' else commas('% 9d' % value.to_s) end
  end
end
class PriceDifferenceFormatter
  def format(value)
    if value.to_s.empty? then '' else colorize_price(commas('% 9d' % value.to_s)) end
  end
end

def print_for_cli(players)
  total = [0, 0, 0, 0]
  players.each do |player|
    total[0] += player.target_price
    total[1] += player.lowest_bin
    total[2] += player.lowest_bin2
    total[3] += player.lowest_bin3
  end

  players.push(Player.new('', '', nil, nil, nil, nil))
  players.push(Player.new('Total', '', total[0], total[1], total[2], total[3]))

  tp players,
     :name,
     {:target_price => {:formatters => [PriceFormatter.new], :width => 33}},
     {:lowest_bin   => {:display_name => '  Lowest BIN', :formatters => [PriceFormatter.new], :width => 32}},
     {:price_difference => {:display_name => '    Price difference', :formatters => [PriceDifferenceFormatter.new], :width => 222}}
end

if ARGV[1].nil?
  players = get_prices(ARGV[0].downcase, PLAYERS_LIST)
  print_for_cli(players)
else
  while true do
    players = get_prices(ARGV[0].downcase, PLAYERS_LIST)
    print_for_cli(players)
    sleep ARGV[1].to_i
  end
end
